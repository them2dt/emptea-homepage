/* =============================================================================
   TAILWIND CSS v4 CONFIGURATION
   =============================================================================
   This file contains the complete styling configuration for the Votables Web
   application using Tailwind CSS v4's new CSS-based configuration approach.
   
   Structure:
   1. Tailwind Import
   2. Custom Font Definitions
   3. CSS Variables
   4. Theme Configuration
   5. Dark Mode
   6. Global Base Styles
   7. Custom Animations
   8. Utility Classes
   ============================================================================= */

/* Import Tailwind CSS base, components, and utilities */
@import "tailwindcss";
@tailwind utilities;

/* =============================================================================
   CUSTOM FONT DEFINITIONS
   =============================================================================
   Define custom fonts using @font-face declarations. These fonts are then
   referenced in the theme configuration below.
   ============================================================================= */

/**
 * Satoshi Variable Font
 * 
 * A modern, geometric sans-serif typeface with variable weight support.
 * Weight range: 200-700 allows for smooth transitions between font weights.
 * 
 * @font-display swap - Ensures text is visible during font load
 * @format truetype - Variable font format for modern browsers
 */
@font-face {
  font-family: 'Satoshi';
  src: url('./fonts/Satoshi-Variable.ttf') format('truetype');
  font-weight: 200 700; /* Variable weight range */
  font-style: normal;
  font-display: swap; /* Improve loading performance */
}

/* =============================================================================
   CSS CUSTOM PROPERTIES (ROOT VARIABLES)
   =============================================================================
   Define base color variables that can be referenced throughout the theme.
   These are separate from Tailwind's theme to allow for dynamic color changes.
   ============================================================================= */

/**
 * Root Color Variables
 * 
 * These variables define the base color scheme for the application.
 * They are referenced in the Tailwind theme configuration and can be
 * dynamically updated for theme switching.
 */
:root {
  --background: #ffffff;  /* Primary background color (light mode) */
  --foreground: #171717;  /* Primary text color (light mode) */
}

/* =============================================================================
   TAILWIND CSS v4 THEME CONFIGURATION
   =============================================================================
   Configure all design tokens using CSS custom properties within the @theme
   directive. This replaces the traditional tailwind.config.js approach.
   
   All values defined here become available as Tailwind utility classes.
   Example: --color-primary-500 becomes bg-primary-500, text-primary-500, etc.
   ============================================================================= */

/**
 * Tailwind CSS v4 Theme Configuration
 * 
 * Configure all design tokens using CSS custom properties.
 * This approach provides better performance and easier maintenance
 * compared to the traditional JavaScript configuration.
 */
@theme {
  /* ---------------------------------------------------------------------------
     TYPOGRAPHY CONFIGURATION
     ---------------------------------------------------------------------------
     Define font families that will be available as Tailwind utilities.
     Example usage: font-sans, font-satoshi, font-mono
     --------------------------------------------------------------------------- */
  
  /* Primary sans-serif font stack with Satoshi as the main font */
  --font-sans: 'Satoshi', ui-sans-serif, system-ui, sans-serif;
  
  /* Direct access to Satoshi font */
  --font-satoshi: 'Satoshi', sans-serif;
  
  /* Monospace font stack for code and technical content */
  --font-mono: ui-monospace, 'SFMono-Regular', 'Menlo', 'Monaco', monospace;

  /* ---------------------------------------------------------------------------
     COLOR SYSTEM
     ---------------------------------------------------------------------------
     Define the complete color palette for the application.
     Colors follow the Tailwind naming convention with numeric scales (50-900).
     --------------------------------------------------------------------------- */
  
  /* Base colors that reference CSS custom properties */
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  
  /* Primary Color Scale - Blue theme for main interactive elements */
  --color-primary-50: #f0f9ff;   /* Lightest blue - backgrounds, hover states */
  --color-primary-100: #e0f2fe;  /* Very light blue - subtle backgrounds */
  --color-primary-200: #bae6fd;  /* Light blue - disabled states, borders */
  --color-primary-300: #7dd3fc;  /* Medium light blue - secondary elements */
  --color-primary-400: #38bdf8;  /* Medium blue - hover states */
  --color-primary-500: #0ea5e9;  /* Base primary blue - main brand color */
  --color-primary-600: #0284c7;  /* Dark blue - active states, emphasis */
  --color-primary-700: #0369a1;  /* Darker blue - headers, important elements */
  --color-primary-800: #075985;  /* Very dark blue - high contrast text */
  --color-primary-900: #0c4a6e;  /* Darkest blue - maximum contrast */

  /* Secondary Color Scale - Neutral grays for text and UI elements */
  --color-secondary-50: #f8fafc;   /* Lightest gray - page backgrounds */
  --color-secondary-100: #f1f5f9;  /* Very light gray - card backgrounds */
  --color-secondary-200: #e2e8f0;  /* Light gray - borders, dividers */
  --color-secondary-300: #cbd5e1;  /* Medium light gray - disabled text */
  --color-secondary-400: #94a3b8;  /* Medium gray - placeholder text */
  --color-secondary-500: #64748b;  /* Base gray - secondary text */
  --color-secondary-600: #475569;  /* Dark gray - body text */
  --color-secondary-700: #334155;  /* Darker gray - headings */
  --color-secondary-800: #1e293b;  /* Very dark gray - emphasized text */
  --color-secondary-900: #0f172a;  /* Darkest gray - maximum contrast */

  /* Accent Colors - Semantic colors for feedback and status */
  --color-accent-success: #10b981;  /* Green - success states, confirmations */
  --color-accent-warning: #f59e0b;  /* Orange - warnings, cautions */
  --color-accent-error: #ef4444;    /* Red - errors, destructive actions */
  --color-accent-info: #3b82f6;     /* Blue - informational messages */

  /* ---------------------------------------------------------------------------
     SPACING SYSTEM
     ---------------------------------------------------------------------------
     Custom spacing values that extend Tailwind's default spacing scale.
     These provide additional options for layout and component spacing.
     --------------------------------------------------------------------------- */
  
  --spacing-18: 4.5rem;   /* 72px - Medium-large spacing */
  --spacing-88: 22rem;    /* 352px - Extra large spacing */
  --spacing-128: 32rem;   /* 512px - Maximum spacing for layouts */

  /* ---------------------------------------------------------------------------
     BORDER RADIUS
     ---------------------------------------------------------------------------
     Extended border radius options for modern, rounded design elements.
     --------------------------------------------------------------------------- */
  
  --radius-xl: 1rem;      /* 16px - Large rounded corners */
  --radius-2xl: 1.5rem;   /* 24px - Extra large rounded corners */
  --radius-3xl: 2rem;     /* 32px - Maximum rounded corners */

  /* ---------------------------------------------------------------------------
     BOX SHADOW SYSTEM
     ---------------------------------------------------------------------------
     Custom shadow definitions for depth and elevation in the design.
     Each shadow provides different levels of visual hierarchy.
     --------------------------------------------------------------------------- */
  
  /* Soft shadow - Subtle elevation for cards and panels */
  --shadow-soft: 0 2px 15px -3px rgb(0 0 0 / 0.07), 0 10px 20px -2px rgb(0 0 0 / 0.04);
  
  /* Medium shadow - Standard elevation for modals and dropdowns */
  --shadow-medium: 0 4px 25px -5px rgb(0 0 0 / 0.1), 0 10px 10px -5px rgb(0 0 0 / 0.04);
  
  /* Strong shadow - High elevation for floating elements */
  --shadow-strong: 0 10px 40px -10px rgb(0 0 0 / 0.15), 0 2px 10px -2px rgb(0 0 0 / 0.05);

  /* ---------------------------------------------------------------------------
     ANIMATION TIMING
     ---------------------------------------------------------------------------
     Standardized animation durations for consistent motion design.
     --------------------------------------------------------------------------- */
  
  --animate-fast: 0.15s;     /* Quick transitions - hover effects */
  --animate-normal: 0.3s;    /* Standard transitions - most UI elements */
  --animate-slow: 0.5s;      /* Slower transitions - page transitions */

  /* ---------------------------------------------------------------------------
     CUSTOM ANIMATIONS
     ---------------------------------------------------------------------------
     Pre-configured animation combinations for common UI patterns.
     These reference the keyframes defined below.
     --------------------------------------------------------------------------- */
  
  --animate-fade-in: fade-in 0.5s ease-in-out;      /* Smooth opacity transition */
  --animate-slide-up: slide-up 0.3s ease-out;       /* Upward slide with fade */
  --animate-slide-down: slide-down 0.3s ease-out;   /* Downward slide with fade */
  --animate-scale-in: scale-in 0.2s ease-out;       /* Scale up with fade */

  /* ---------------------------------------------------------------------------
     RESPONSIVE BREAKPOINTS
     ---------------------------------------------------------------------------
     Custom breakpoints for responsive design. These extend Tailwind's
     default breakpoints with additional options for fine-tuned control.
     --------------------------------------------------------------------------- */
  
  --breakpoint-xs: 475px;   /* Extra small devices - large phones */
  --breakpoint-sm: 640px;   /* Small devices - tablets */
  --breakpoint-md: 768px;   /* Medium devices - small laptops */
  --breakpoint-lg: 1024px;  /* Large devices - desktops */
  --breakpoint-xl: 1280px;  /* Extra large devices - large desktops */
  --breakpoint-2xl: 1536px; /* 2x extra large devices - wide screens */
}

/* =============================================================================
   DARK MODE CONFIGURATION
   =============================================================================
   Automatic dark mode support based on user's system preferences.
   Updates CSS custom properties for seamless theme switching.
   ============================================================================= */

/**
 * Dark Mode Color Overrides
 * 
 * Automatically applies dark theme colors when user's system preference
 * is set to dark mode. Only base colors need to be overridden as all
 * other colors remain consistent between themes.
 */
@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;  /* Dark background - near black */
    --foreground: #ededed;  /* Light foreground - near white */
  }
}

/* =============================================================================
   GLOBAL BASE STYLES
   =============================================================================
   Base styles that apply to fundamental HTML elements.
   These provide the foundation for the entire application's appearance.
   ============================================================================= */

/**
 * Body Element Styling
 * 
 * Sets the base appearance for the entire application.
 * Uses CSS custom properties to ensure theme consistency.
 */
body {
  background: var(--background);  /* Dynamic background color */
  color: var(--foreground);       /* Dynamic text color */
  font-family: var(--font-sans);  /* Satoshi font stack */
}

/* =============================================================================
   CUSTOM ANIMATION KEYFRAMES
   =============================================================================
   Define the actual animation sequences that are referenced in the theme
   configuration. These provide smooth, performant transitions for UI elements.
   ============================================================================= */

/**
 * Fade In Animation
 * 
 * Smooth opacity transition from invisible to fully visible.
 * Used for content loading and modal appearances.
 */
@keyframes fade-in {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

/**
 * Slide Up Animation
 * 
 * Combines upward movement with fade-in effect.
 * Perfect for notifications, tooltips, and content reveals.
 */
@keyframes slide-up {
  0% { 
    transform: translateY(10px);  /* Start 10px below final position */
    opacity: 0;                   /* Start invisible */
  }
  100% { 
    transform: translateY(0);     /* End at natural position */
    opacity: 1;                   /* End fully visible */
  }
}

/**
 * Slide Down Animation
 * 
 * Combines downward movement with fade-in effect.
 * Used for dropdown menus and expanding content.
 */
@keyframes slide-down {
  0% { 
    transform: translateY(-10px); /* Start 10px above final position */
    opacity: 0;                   /* Start invisible */
  }
  100% { 
    transform: translateY(0);     /* End at natural position */
    opacity: 1;                   /* End fully visible */
  }
}

/**
 * Scale In Animation
 * 
 * Combines scaling effect with fade-in for gentle emphasis.
 * Perfect for buttons, cards, and interactive elements.
 */
@keyframes scale-in {
  0% { 
    transform: scale(0.95);       /* Start slightly smaller */
    opacity: 0;                   /* Start invisible */
  }
  100% { 
    transform: scale(1);          /* End at natural size */
    opacity: 1;                   /* End fully visible */
  }
}

/* =============================================================================
   CUSTOM UTILITY CLASSES
   =============================================================================
   Additional utility classes that extend Tailwind's functionality.
   These provide modern CSS features for better typography and layout.
   ============================================================================= */

/**
 * Text Balance Utility
 * 
 * Improves text layout by balancing line lengths in multi-line text.
 * Particularly useful for headings and short paragraphs.
 * 
 * Usage: <h1 class="text-balance">Balanced Heading Text</h1>
 */
.text-balance {
  text-wrap: balance;
}

/**
 * Text Pretty Utility
 * 
 * Optimizes text wrapping to avoid awkward breaks and orphaned words.
 * Best used for body text and longer content blocks.
 * 
 * Usage: <p class="text-pretty">Pretty wrapped paragraph text</p>
 */
.text-pretty {
  text-wrap: pretty;
}

.info-popup-scrollbar::-webkit-scrollbar {
  display: none;
}

/* For Firefox */
.info-popup-scrollbar {
  scrollbar-width: none;
}
